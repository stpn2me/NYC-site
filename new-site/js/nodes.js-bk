$(document).ready(function () {

    "use strict";


    var window_width = $(window).width(),

        window_height = window.innerHeight,

        header_height = $(".default-header").height(),

        header_height_static = $(".site-header.static").outerHeight(),

        headerB_height = $(".default-header").height(),

        headerB_height_static = $(".site-header.static").outerHeight(),

        fitscreen = window_height - header_height - headerB_height;


    $(".fullscreen").css("height", window_height)

    $(".fitscreen").css("height", fitscreen);


    if (document.getElementById("default-select")) {

        $('select').niceSelect();

    }
    ;


    $('.img-pop-up').magnificPopup({

        type: 'image',

        gallery: {

            enabled: true

        }

    });


    $('.play-btn').magnificPopup({

        type: 'iframe',

        mainClass: 'mfp-fade',

        removalDelay: 160,

        preloader: false,

        fixedContentPos: false

    });


    //  Counter Js


    if (document.getElementById("counter")) {

        $('.counter').counterUp({

            delay: 10,

            time: 1000

        });

    }
    ;


    // Initiate superfish on nav menu

    $('.nav-menu').superfish({

        animation: {

            opacity: 'show'

        },

        speed: 400

    });


    // Mobile Navigation

    if ($('#nav-menu-container').length) {

        var $mobile_nav = $('#nav-menu-container').clone().prop({

            id: 'mobile-nav'

        });

        $mobile_nav.find('> ul').attr({

            'class': '',

            'id': ''

        });

        $('body').append($mobile_nav);

        $('body').prepend('<button type="button" id="mobile-nav-toggle"><i class="lnr lnr-menu"></i></button>');

        $('body').append('<div id="mobile-body-overly"></div>');

        $('#mobile-nav').find('.menu-has-children').prepend('<i class="lnr lnr-chevron-down"></i>');


        $(document).on('click', '.menu-has-children i', function (e) {

            $(this).next().toggleClass('menu-item-active');

            $(this).nextAll('ul').eq(0).slideToggle();

            $(this).toggleClass("lnr-chevron-up lnr-chevron-down");

        });


        $(document).on('click', '#mobile-nav-toggle', function (e) {

            $('body').toggleClass('mobile-nav-active');

            $('#mobile-nav-toggle i').toggleClass('lnr-cross lnr-menu');

            $('#mobile-body-overly').toggle();

        });


        $(document).click(function (e) {

            var container = $("#mobile-nav, #mobile-nav-toggle");

            if (!container.is(e.target) && container.has(e.target).length === 0) {

                if ($('body').hasClass('mobile-nav-active')) {

                    $('body').removeClass('mobile-nav-active');

                    $('#mobile-nav-toggle i').toggleClass('lnr-cross lnr-menu');

                    $('#mobile-body-overly').fadeOut();

                }

            }

        });

    } else if ($("#mobile-nav, #mobile-nav-toggle").length) {

        $("#mobile-nav, #mobile-nav-toggle").hide();

    }


    // Smooth scroll for the menu and links with .scrollto classes

    $('.nav-menu a, #mobile-nav a, .scrollto').on('click', function () {

        if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') && location.hostname == this.hostname) {

            var target = $(this.hash);

            if (target.length) {

                var top_space = 0;


                if ($('#header, #headerB').length) {

                    top_space = $('#header, #headerB').outerHeight();


                    if (!$('#header, #headerB').hasClass('header-fixed')) {

                        top_space = top_space;

                    }

                }


                $('html, body').animate({

                    scrollTop: target.offset().top - top_space

                }, 1500, 'easeInOutExpo');


                if ($(this).parents('.nav-menu').length) {

                    $('.nav-menu .menu-active').removeClass('menu-active');

                    $(this).closest('li').addClass('menu-active');

                }


                if ($('body').hasClass('mobile-nav-active')) {

                    $('body').removeClass('mobile-nav-active');

                    $('#mobile-nav-toggle i').toggleClass('lnr-times lnr-bars');

                    $('#mobile-body-overly').fadeOut();

                }

                return false;

            }

        }

    });


    $(document).ready(function () {


        $('html, body').hide();


        if (window.location.hash) {


            setTimeout(function () {


                $('html, body').scrollTop(0).show();


                $('html, body').animate({


                    scrollTop: $(window.location.hash).offset().top - 62


                }, 1000)


            }, 0);


        }


        else {


            $('html, body').show();


        }


    });


    // Header scroll class

    $(window).scroll(function () {

        if ($(this).scrollTop() > 100) {

            $('#header, #headerB').addClass('header-scrolled');

        } else {

            $('#header, #headerB').removeClass('header-scrolled');

        }

    })


    $('.active-tstimonial-carusel').owlCarousel({

        items: 3,

        margin: 30,

        autoplay: true,

        loop: true,

        dots: true,

        responsive: {

            0: {

                items: 1

            },

            480: {

                items: 1,

            },

            960: {

                items: 2,

            },

            961: {

                items: 3,

            }


        }

    });


    //  Start Google map


    // When the window has finished loading create our google map below


    if (document.getElementById("map")) {


        google.maps.event.addDomListener(window, 'load', init);


        function init() {

            // Basic options for a simple Google Map

            // For more options see: https://developers.google.com/maps/documentation/javascript/reference#MapOptions

            var mapOptions = {

                // How zoomed in you want the map to start at (always required)

                zoom: 11,


                // The latitude and longitude to center the map (always required)

                center: new google.maps.LatLng(40.6700, -73.9400), // New York


                // How you would like to style the map.

                // This is where you would paste any style found on Snazzy Maps.

                styles: [{
                    "featureType": "water",
                    "elementType": "geometry",
                    "stylers": [{"color": "#e9e9e9"}, {"lightness": 17}]
                }, {
                    "featureType": "landscape",
                    "elementType": "geometry",
                    "stylers": [{"color": "#f5f5f5"}, {"lightness": 20}]
                }, {
                    "featureType": "road.highway",
                    "elementType": "geometry.fill",
                    "stylers": [{"color": "#ffffff"}, {"lightness": 17}]
                }, {
                    "featureType": "road.highway",
                    "elementType": "geometry.stroke",
                    "stylers": [{"color": "#ffffff"}, {"lightness": 29}, {"weight": 0.2}]
                }, {
                    "featureType": "road.arterial",
                    "elementType": "geometry",
                    "stylers": [{"color": "#ffffff"}, {"lightness": 18}]
                }, {
                    "featureType": "road.local",
                    "elementType": "geometry",
                    "stylers": [{"color": "#ffffff"}, {"lightness": 16}]
                }, {
                    "featureType": "poi",
                    "elementType": "geometry",
                    "stylers": [{"color": "#f5f5f5"}, {"lightness": 21}]
                }, {
                    "featureType": "poi.park",
                    "elementType": "geometry",
                    "stylers": [{"color": "#dedede"}, {"lightness": 21}]
                }, {
                    "elementType": "labels.text.stroke",
                    "stylers": [{"visibility": "on"}, {"color": "#ffffff"}, {"lightness": 16}]
                }, {
                    "elementType": "labels.text.fill",
                    "stylers": [{"saturation": 36}, {"color": "#333333"}, {"lightness": 40}]
                }, {"elementType": "labels.icon", "stylers": [{"visibility": "off"}]}, {
                    "featureType": "transit",
                    "elementType": "geometry",
                    "stylers": [{"color": "#f2f2f2"}, {"lightness": 19}]
                }, {
                    "featureType": "administrative",
                    "elementType": "geometry.fill",
                    "stylers": [{"color": "#fefefe"}, {"lightness": 20}]
                }, {
                    "featureType": "administrative",
                    "elementType": "geometry.stroke",
                    "stylers": [{"color": "#fefefe"}, {"lightness": 17}, {"weight": 1.2}]
                }]

            };


            // Get the HTML DOM element that will contain your map

            // We are using a div with id="map" seen below in the <body>

            var mapElement = document.getElementById('map');


            // Create the Google Map using our element and options defined above

            var map = new google.maps.Map(mapElement, mapOptions);


            // Let's also add a marker while we're at it

            var marker = new google.maps.Marker({

                position: new google.maps.LatLng(40.6700, -73.9400),

                map: map,

                title: 'Snazzy!'

            });

        }

    }


    $(document).ready(function () {

        $('#mc_embed_signup').find('form').ajaxChimp();

    });


    getBlockDifficulty();

    setInterval(getBlockDifficulty, 180 * 1000);

    function getBlockDifficulty() {

        $.get("../_php/getBlockDifficulty.php", function (data) {

            $('.block-difficulty').html(data);

            $('.block-difficulty').counterUp({

                delay: 10,

                time: 1000

            });

        });

    }


    getBlockCount();

    setInterval(getBlockCount, 180 * 1000);

    function getBlockCount() {

        $.get("../_php/getBlockCount.php", function (data) {

            $('.block-count').html(data);

            $('.block-count').counterUp({

                delay: 10,

                time: 1000

            });

        });

    }


    getTopCountry();

    setInterval(getTopCountry, 120 * 1000);

    function getTopCountry() {

        $.getJSON("../_php/getTopCountry.php", function (data) {

            if (!data['status']) return;


            var str = '';

            for (var i = 0; i < data['item'].length; i++) {

                var item = data['item'][i];

                str += '<div class="table-row">' + 

                    '       <div class="rank">' +

                    '       <img src="' + item.flag + '" alt="flag" style="width:25px;">' + '\xa0\xa0\xa0\xa0\xa0\xa0\xa0' + item.rank + '</div>' +

                    '       <div class="country"> ' + item.country + '</div>' +

                    '       <div class="nodes">' + item.count + '</div>' +

                    '       <div class="percentage">' + item.count + '</div>' +                    

                    '   </div>'

            }

            $('.ranking-table > .table-body').html(str);

            if (data['fullNodeCount'] != -1) {

                $('.node-count').html(data['fullNodeCount']);

                $('.node-count').counterUp({

                    delay: 10,

                    time: 1000

                });

            }


            if (data['totalCount'] != -1) {

                $('.connection-count').html(data['totalCount']);

                $('.connection-count').counterUp({

                    delay: 10,

                    time: 1000

                });

            }


        });

    }

    function showNodeStatus(type, info) {
        if (type == 0) {
            $('#check-node-status').html('<div class="alert text-center alert-danger" style="display: block;">\n' +
                '    <p class="fa fa-exclamation-circle"></p>&nbsp;Enter valid IP/Port address.\n' +
                '</div>');
        } else if (type == 1) {
            $('#check-node-status').html('<div class="alert text-center alert-danger" style="display: block;">\n' +
                '    <p class="fa fa-exclamation-circle"></p>&nbsp;' + $('#ip').val() +  ' is unreachable.' +
                '</div>');
        } else if (type ==  2) {
            $('#check-node-status').html('<div class="alert text-center alert-success" style="display: block;">\n' +
                '    <p class="fa fa-check-circle"></p>&nbsp;\n' +
                '    <a title="Node status">' + info.ip_addr + ':' + info.port + ' /' + info.version + '/</a>\n' +
                '</div>\n');
        }
    }


    $('#search-node > .custom-btn2').click(function() {
        var ip = $('#ip').val(),
            port = $('#port').val();

        if (ip == '' || port == '') {
            showNodeStatus(0, null);
            return;
        }
        $('#check-node-status').html('');
        $('.loading').show();
        $.post("../_php/getNodeStatus.php",
            { ip: ip, port: port},
            function (data) {
                $('.loading').hide();

                data = $.parseJSON(data);
                if (!data['status']) {
                    showNodeStatus(1, null);
                } else {
                    showNodeStatus(2, data.info);
                }
            }
        );
    });

});

